{"version":3,"file":"static/webpack/static/development/pages/index.js.9d57b5baf0415034ce49.hot-update.js","sources":["webpack:///./components/dashboard-frame.js"],"sourcesContent":["import React from 'react';\nimport { Siteframe } from 'yokui/react/siteframe';\nimport { Icon } from 'yokui/react/iconography';\nimport { Grid, FlexCol } from 'yokui/react/flex-grids';\nimport { Table } from 'yokui/react/table';\n\nexport default () => {\n\n  const data1 = [{\n    account: 'Gaji',\n    type: 'debit',\n    amount: '3000000,00'\n  }, {\n    account: 'Sepatu',\n    type: 'credit',\n    amount: '345000,00'\n  }];\n\n  let tableDatas = [];\n  let total = 0;\n  let totalDebit = 0;\n  let totalCredit = 0;\n\n  for (var i = 0; i < data1.length; i++) {\n    let tableData = {\n      akun: data1[i].account\n    }\n\n    if (data1[i].type === 'debit') {\n      tableData.debit = data1[i].amount\n      totalDebit += parseFloat(data1[i].amount);\n    }\n\n    if (data1[i].type === 'credit') {\n      tableData.kredit = data1[i].amount;\n      totalCredit += parseFloat(data1[i].amount);\n    }\n\n    tableDatas.push(tableData);\n  }\n\n  console.log(tableDatas);\n  total = totalDebit - totalCredit;\n\n  const columns = ['akun', 'debit', 'kredit'];\n\n    return (\n      <div style={{position: 'relative', height: '100vh'}}>\n        <Siteframe {...{\n          headerProps: {\n            companyName: 'Antaraksi',\n            productName: 'yoiso'\n          },\n        }}>\n          <Grid className='grid-show mbxl'>\n            <FlexCol {...{breakpoint: 'sm'}}>\n              <p>tes</p>\n            </FlexCol>\n            <FlexCol grow={4} style={{backgroundColor: 'white', height: '100vh'}}>\n              <Table columns={columns} data={tableDatas} />\n              <p>Jumlah: {total}</p>\n            </FlexCol>\n          </Grid>\n        </Siteframe>\n      </div>\n    )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}